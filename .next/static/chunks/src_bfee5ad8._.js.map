{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/phanu/Automation-n8n%2Bwebiste/Automation-n8n%2Bwebiste/src/components/ProjectDetail.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Image from \"next/image\";\r\n\r\nexport default function ProjectDetail({\r\n  title,\r\n  description,\r\n  category,\r\n  skill,\r\n  year,\r\n  image,\r\n  objectives,\r\n  results\r\n}: {\r\n  title: string;\r\n  description: string;\r\n  category: string;\r\n  skill: string[];\r\n  year: string;\r\n  image: string;\r\n  objectives: string[];\r\n  results: string[];\r\n}) {\r\n  return (\r\n    <section className=\"py-20 bg-white dark:bg-gray-900\">\r\n      <div className=\"max-w-4xl mx-auto px-4\">\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-3xl font-bold mb-2 text-gray-900 dark:text-white\">{title}</h1>\r\n          <div className=\"flex flex-wrap gap-2 mb-4\">\r\n            {skill.map((s, i) => (\r\n              <span key={i} className=\"px-3 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded-full text-sm font-medium\">\r\n                {s}\r\n              </span>\r\n            ))}\r\n          </div>\r\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">Year: {year}</p>\r\n        </div>\r\n        <div className=\"mb-8\">\r\n          <Image src={image} alt={title} width={800} height={400} className=\"rounded-lg shadow-lg\" />\r\n        </div>\r\n        <p className=\"text-gray-600 dark:text-gray-300 mb-4\">{description}</p>\r\n        <div className=\"mb-6\">\r\n          <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">Objectives</h3>\r\n          <ul className=\"list-disc pl-5 space-y-1 text-gray-700 dark:text-gray-300\">\r\n            {objectives.map((o, i) => (\r\n              <li key={i}>{o}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">Results</h3>\r\n          <ul className=\"list-disc pl-5 space-y-1 text-gray-700 dark:text-gray-300\">\r\n            {results.map((r, i) => (\r\n              <li key={i}>{r}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS,cAAc,EACpC,KAAK,EACL,WAAW,EACX,QAAQ,EACR,KAAK,EACL,IAAI,EACJ,KAAK,EACL,UAAU,EACV,OAAO,EAUR;IACC,qBACE,6LAAC;QAAQ,WAAU;kBACjB,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAyD;;;;;;sCACvE,6LAAC;4BAAI,WAAU;sCACZ,MAAM,GAAG,CAAC,CAAC,GAAG,kBACb,6LAAC;oCAAa,WAAU;8CACrB;mCADQ;;;;;;;;;;sCAKf,6LAAC;4BAAE,WAAU;;gCAA2C;gCAAO;;;;;;;;;;;;;8BAEjE,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;wBAAC,KAAK;wBAAO,KAAK;wBAAO,OAAO;wBAAK,QAAQ;wBAAK,WAAU;;;;;;;;;;;8BAEpE,6LAAC;oBAAE,WAAU;8BAAyC;;;;;;8BACtD,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAA2D;;;;;;sCACzE,6LAAC;4BAAG,WAAU;sCACX,WAAW,GAAG,CAAC,CAAC,GAAG,kBAClB,6LAAC;8CAAY;mCAAJ;;;;;;;;;;;;;;;;8BAIf,6LAAC;;sCACC,6LAAC;4BAAG,WAAU;sCAA2D;;;;;;sCACzE,6LAAC;4BAAG,WAAU;sCACX,QAAQ,GAAG,CAAC,CAAC,GAAG,kBACf,6LAAC;8CAAY;mCAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOvB;KAxDwB","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/phanu/Automation-n8n%2Bwebiste/Automation-n8n%2Bwebiste/src/app/projects/%5Bslug%5D/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { notFound } from \"next/navigation\";\r\nimport projects from \"@/data/projects.json\";\r\nimport ProjectDetail from \"@/components/ProjectDetail\";\r\n\r\ntype Project = {\r\n  slug: string;\r\n  name: string;\r\n  description: string;\r\n  category: string;\r\n  skill: string[];\r\n  year: string;\r\n  image: string;\r\n  objectives: string[];\r\n  results: string[];\r\n};\r\n\r\nexport default async function ProjectPage({ params }: { params: { slug: string } }) {\r\n  const { slug } = await params; // หรือ\r\n  // const { slug } = use(params)\r\n\r\n  const project = (projects as Project[]).find((p) => p.slug === slug);\r\n  if (!project) return notFound();\r\n\r\n  return (\r\n    <ProjectDetail\r\n      title={project.name}\r\n      description={project.description}\r\n      category={project.category}\r\n      skill={project.skill}\r\n      year={project.year}\r\n      image={project.image}\r\n      objectives={project.objectives}\r\n      results={project.results}\r\n    />\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAkBe,eAAe,YAAY,EAAE,MAAM,EAAgC;IAChF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,QAAQ,OAAO;IACtC,+BAA+B;IAE/B,MAAM,UAAU,AAAC,+FAAA,CAAA,UAAQ,CAAe,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK;IAC/D,IAAI,CAAC,SAAS,OAAO,CAAA,GAAA,qIAAA,CAAA,WAAQ,AAAD;IAE5B,qBACE,6LAAC,sIAAA,CAAA,UAAa;QACZ,OAAO,QAAQ,IAAI;QACnB,aAAa,QAAQ,WAAW;QAChC,UAAU,QAAQ,QAAQ;QAC1B,OAAO,QAAQ,KAAK;QACpB,MAAM,QAAQ,IAAI;QAClB,OAAO,QAAQ,KAAK;QACpB,YAAY,QAAQ,UAAU;QAC9B,SAAS,QAAQ,OAAO;;;;;;AAG9B;KAnB8B","debugId":null}}]
}