{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/Documents/augment-projects/BoomBigNose-portfolio/src/app/api/n8n-response/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\n\n// Simple endpoint for n8n to send responses back\nexport async function POST(request: NextRequest) {\n  try {\n    // Required API key check\n    const apiKey = request.headers.get('x-api-key');\n    const expectedApiKey = 'boom-portfolio-2024';\n\n    if (!apiKey || apiKey !== expectedApiKey) {\n      return NextResponse.json(\n        {\n          error: \"Unauthorized - API key required\",\n          message: \"Please include 'x-api-key: boom-portfolio-2024' in headers\"\n        },\n        { status: 401 }\n      );\n    }\n\n    const body = await request.json();\n    console.log(\"n8n response received:\", body);\n\n    // Extract response from various possible formats\n    const response = body.response || body.message || body.reply || body.text || \"ไม่สามารถประมวลผลคำตอบได้\";\n\n    // Log the response for debugging\n    console.log(\"Processed response:\", response);\n\n    // Return success response\n    return NextResponse.json({\n      success: true,\n      message: \"Response received successfully\",\n      processedResponse: response,\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    console.error(\"n8n response error:\", error);\n    return NextResponse.json(\n      {\n        success: false,\n        error: \"Failed to process n8n response\",\n        details: error instanceof Error ? error.message : \"Unknown error\"\n      },\n      { status: 500 }\n    );\n  }\n}\n\n"],"names":[],"mappings":";;;AAAA;;AAGO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,yBAAyB;QACzB,MAAM,SAAS,QAAQ,OAAO,CAAC,GAAG,CAAC;QACnC,MAAM,iBAAiB;QAEvB,IAAI,CAAC,UAAU,WAAW,gBAAgB;YACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBACE,OAAO;gBACP,SAAS;YACX,GACA;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,OAAO,MAAM,QAAQ,IAAI;QAC/B,QAAQ,GAAG,CAAC,0BAA0B;QAEtC,iDAAiD;QACjD,MAAM,WAAW,KAAK,QAAQ,IAAI,KAAK,OAAO,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,IAAI;QAE7E,iCAAiC;QACjC,QAAQ,GAAG,CAAC,uBAAuB;QAEnC,0BAA0B;QAC1B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS;YACT,mBAAmB;YACnB,WAAW,IAAI,OAAO,WAAW;QACnC;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,SAAS;YACT,OAAO;YACP,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QACpD,GACA;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}